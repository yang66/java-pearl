package com.robert.dsal.classic.chutesladders;

// TODO Not Implemented 

/**
  有一种叫做“Chutes and Ladders”（梯子和滑梯）的简单游戏。游戏在一块棋盘上进行，棋盘上有编号从1-100的格子，玩家们从假定的编号为0的格子处出发。
各玩家轮流投掷色子（上有数字1-6），色子的数字表示玩家在棋盘上将前进的步数，最先到达100号格子的玩家胜利。

  当然游戏不会仅仅这么无聊。在棋盘上不同的格子之间可能通过Ladder(梯子，从编号小的格子连至编号大的格子)和“Chute”(滑梯，从编号大的格子连至编号小的格子)连接起来。
如果，一次投色子后前进到达的格子处是ladder或chute的起点，则玩家将到达ladder或chute通向的格子。注意：终点格子处的ladder和chute都是无效的，但起点处的有效。

  此外，有一些特殊的格子：写有“miss-a-turn”的格子表示玩家一旦到达它们，将失去下一轮的投色子前进机会，写有“extra-turn”的格子表示玩家可以立即再投一次色子再前
进一次。起点和终点处的格子都不会是这两种特殊格子。

  如果一个玩家当前处于编号95以上的格子处，如果它们投掷的色子使它们前进的终点超过了100，那么这次这次投掷将被忽略。

输入：输入的开始为少于1000次的色子投掷结果，每个都是1到6的整数，由6表示结束。

  接下来是一个或多个游戏数据集。每个数据集包含三个部分。

  第一部分：一行表示游戏中的玩家数，多于1少于6。

  第二部分：棋盘中的ladders和chutes. ladders和chutes每个都由两个1-99的整数表示起点和终点。当遇到一行“0 0”时表示该部分结束。

  第三部分：棋盘中的“miss-a-turn”格和“extra-turn”格。每行一个，如果数字是负数说明是“miss-a-turn”, 正数说明是“extra-turn”
（例如：-15表示15号格是"miss-a-turn"格, 25表示25号格是“extra-turn”）.0表示该部分结束。

输出：每轮游戏对应1行，输出该轮游戏的赢家编号，输入已保证会找到赢家。 
 */

public interface ChutesAndLadder {

}
